CREATE SCHEMA `website` DEFAULT CHARACTER SET utf8 ;

CREATE TABLE `website`.`member` (
  `id` BIGINT PRIMARY KEY AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `username` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `follower_count` INT UNSIGNED NOT NULL DEFAULT TO 0,
  `time` DATETIME NOT NULL, DEFAULT TO CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`));

CREATE TABLE `website`.`member` (
    `id` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT 'Unique ID',
    `name` VARCHAR(255) NOT NULL COMMENT 'Name',
    `username` VARCHAR(255) NOT NULL COMMENT 'Username',
    `password` VARCHAR(255) NOT NULL COMMENT 'Password',
    `follower_count` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Follower Count',
    `time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Signup Time'
    );

INSERT INTO `website`.`member` (`name`, `username`,`password`) 
VALUES ('test', 'test','test')

INSERT INTO `website`.`member` (`name`, `username`,`password`,`follower_count`,`time`) VALUES ('Midori', 'Midori','test',100,'2023-04-15 12:30:00'),('Stella', 'Stella','test',100,'2023-04-10 13:30:00'),('Yun', 'Yun','test',100,'2024-02-10 13:30:00'),('Hoho', 'Hoho','test',100,CURRENT_TIMESTAMP);

DELETE FROM Customers WHERE id='5';

SELECT * FROM website.member
ORDER BY time DESC;

SELECT * FROM website.member ORDER BY time DESC;

SELECT * FROM website.member ORDER BY time DESC LIMIT 3 OFFSET 1;

SELECT * FROM website.member WHERE username = 'test';

includes

SELECT * FROM website.member WHERE username includes 'test';

SELECT * FROM website.member WHERE username = 'test' AND password = 'test';

UPDATE website.member SET name = 'test2' WHERE username = 'test';

SELECT COUNT(*) FROM website.member;

SELECT AVG(follower_count) FROM website.member;

SELECT AVG(sub.follower_count) AS avg_follower_count 
FROM (
    SELECT follower_count
    FROM website.member
    ORDER BY follower_count DESC
    LIMIT 2
) AS sub;

CREATE TABLE website.message (
    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT 'Unique ID',
    member_id BIGINT NOT NULL COMMENT 'Member ID for Message Sender',
    FOREIGN KEY (member_id) REFERENCES member(id),
    content VARCHAR(255) NOT NULL COMMENT 'Content',
    like_count INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Like Content',
    time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Publish Time'
);

INSERT INTO `website`.`message` (`member_id`,`content`, `like_count`,`time`) VALUES (2,'Hello', 5,'2023-04-15 12:56:00'),(3,'Hello back', 3,'2023-04-15 13:30:00'),(5,'See you later', 5,'2024-04-30 13:30:00'),(4,'See you soon', 3,'2024-04-30 13:30:50'),(1,'Test message', 1,'2020-04-15 12:00:00');

SELECT message.*, member.name AS sender_name
FROM website.message
JOIN website.member ON message.member_id = member.id;

SELECT message.*, member.name AS sender_name
FROM website.message
JOIN website.member ON message.member_id = member.id
WHERE username = 'test';

SELECT AVG(message.like_count) AS average_likes
FROM website.message
JOIN website.member ON message.member_id = member.id
WHERE member.username = 'test';

SELECT AVG(message.like_count) AS average_likes, member.name AS sender_name
FROM website.message
JOIN website.member ON message.member_id = member.id
GROUP BY member_id,sender_name;

mysqldump -u root -p website > data.sql

USE website
SELECT message.member_id, member.username AS sender_username, AVG(message.like_count) AS avg_like_count
FROM message
JOIN member ON message.member_id = member.id
GROUP BY sender_username;

USE website
SELECT message.member_id, member.username AS sender_username, AVG(message.like_count) AS avg_like_count
FROM message
JOIN member ON message.member_id = member.id
GROUP BY member.username;

SELECT member.username AS sender_username, AVG(message.like_count) AS avg_like_count
FROM message
JOIN member ON message.member_id = member.id
GROUP BY sender_username;

SELECT message.*, member.name AS sender_name
FROM website.message
JOIN website.member ON message.member_id = member.id;

原本的:
SELECT AVG(message.like_count) AS average_likes, member.username AS sender_username
FROM website.message
JOIN website.member ON message.member_id = member.id
GROUP BY sender_username;




